{"version":3,"sources":["App.js","index.js","img/menu-tree-black.svg","img/menu-achivment-black.svg","img/menu-settings-black.svg"],"names":["App","props","state","activeStory","onStoryChange","bind","e","this","setState","currentTarget","dataset","story","tabbar","onClick","selected","data-story","text","src","menuTreeBlack","width","menuAchivmentBlack","menuSettingsBlack","id","activePanel","React","Component","connect","send","ReactDOM","render","document","getElementById","module","exports"],"mappings":"qmBAuEeA,E,YA5Dd,WAAaC,GAAQ,IAAD,8BACnB,4CAAMA,KACDC,MAAQ,CACZC,YAAa,YAEd,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBALF,E,2EAQLC,GACdC,KAAKC,SAAS,CAAEL,YAAaG,EAAEG,cAAcC,QAAQC,U,+BAIrD,OACC,kBAAC,IAAD,CAAMR,YAAaI,KAAKL,MAAMC,YAAaS,OAC1C,kBAAC,IAAD,KACC,kBAAC,IAAD,CACCC,QAASN,KAAKH,cACdU,SAAqC,aAA3BP,KAAKL,MAAMC,YACrBY,aAAW,WACXC,KAAK,IACL,yBAAKC,IAAKC,IAAeC,MAAM,UAEhC,kBAAC,IAAD,CACCN,QAASN,KAAKH,cACdU,SAAqC,eAA3BP,KAAKL,MAAMC,YACrBY,aAAW,aACXC,KAAK,IACL,yBAAKC,IAAKG,IAAoBD,MAAM,UAErC,kBAAC,IAAD,CACCN,QAASN,KAAKH,cACdU,SAAqC,aAA3BP,KAAKL,MAAMC,YACrBY,aAAW,WACXC,KAAK,IACL,yBAAKC,IAAKI,IAAmBF,MAAM,YAIrC,kBAAC,IAAD,CAAMG,GAAG,WAAWC,YAAY,YAC/B,kBAAC,IAAD,CAAOD,GAAG,YACT,kBAAC,IAAD,qDAGF,kBAAC,IAAD,CAAMA,GAAG,aAAaC,YAAY,cACjC,kBAAC,IAAD,CAAOD,GAAG,cACT,kBAAC,IAAD,qDAGF,kBAAC,IAAD,CAAMA,GAAG,WAAWC,YAAY,YAC/B,kBAAC,IAAD,CAAOD,GAAG,YACT,kBAAC,IAAD,sE,GApDYE,IAAMC,WCCxBC,IAAQC,KAAK,gBAQbC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCnBjDC,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,kD,mBCA3CD,EAAOC,QAAU,IAA0B,kD","file":"static/js/main.9cd64601.chunk.js","sourcesContent":["import React from 'react';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { View, Panel, PanelHeader, Group, List, Cell, Tabbar, TabbarItem, Epic} from '@vkontakte/vkui';\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon28Search from '@vkontakte/icons/dist/28/chevron_back';\nimport menuTreeBlack from './img/menu-tree-black.svg';\nimport menuAchivmentBlack from './img/menu-achivment-black.svg';\nimport menuSettingsBlack from './img/menu-settings-black.svg';\n\nclass App extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tactiveStory: 'presents'\n\t\t};\n\t\tthis.onStoryChange = this.onStoryChange.bind(this);\n\t}\n\n\tonStoryChange (e) {\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story })\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<Epic activeStory={this.state.activeStory} tabbar={\n\t\t\t\t<Tabbar>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'presents'}\n\t\t\t\t\t\tdata-story=\"presents\"\n\t\t\t\t\t\ttext=\"\">\n\t\t\t\t\t\t<img src={menuTreeBlack} width=\"28px\" />\n\t\t\t\t\t</TabbarItem>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'achivments'}\n\t\t\t\t\t\tdata-story=\"achivments\"\n\t\t\t\t\t\ttext=\"\">\n\t\t\t\t\t\t<img src={menuAchivmentBlack} width=\"28px\" />\n\t\t\t\t\t</TabbarItem>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'settings'}\n\t\t\t\t\t\tdata-story=\"settings\"\n\t\t\t\t\t\ttext=\"\">\n\t\t\t\t\t\t<img src={menuSettingsBlack} width=\"28px\" />\n\t\t\t\t\t</TabbarItem>\n\t\t\t\t</Tabbar>\n\t\t\t}>\n\t\t\t\t<View id=\"presents\" activePanel=\"presents\">\n\t\t\t\t\t<Panel id=\"presents\">\n\t\t\t\t\t\t<PanelHeader>Подарки</PanelHeader>\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t\t\t<View id=\"achivments\" activePanel=\"achivments\">\n\t\t\t\t\t<Panel id=\"achivments\">\n\t\t\t\t\t\t<PanelHeader>Награды</PanelHeader>\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t\t\t<View id=\"settings\" activePanel=\"settings\">\n\t\t\t\t\t<Panel id=\"settings\">\n\t\t\t\t\t\t<PanelHeader>Настройки</PanelHeader>\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t\t</Epic>\n\n\t\t);\n\t}\n}\n\nexport default App;\n\n","//import 'core-js/es6/map';\n//import 'core-js/es6/set';\nimport 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App  from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/menu-tree-black.ad2fe359.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu-achivment-black.026d7112.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu-settings-black.e23e3378.svg\";"],"sourceRoot":""}